name: "S3 Upload"
description: "Uploads artifacts to S3"
inputs:
  source:
    required: true
    description: "Source file to upload"
  bucket:
    required: true
    description: "S3 Bucket to upload to"
  archive:
    required: false
    default: "false"
    description: "Archive the source file"

outputs:
  cache_key:
    description: "Random Generated Key"
    value: ${{ steps.random.outputs.cache_key }}

runs:
  using: "composite"
  steps:
    - name: generate random index
      shell: python
      id: random
      if: ${{ inputs.random_key }}
      run: echo random=$(pyhton random.py) >> ${GITHUB_OUTPUT}

    - name: archive source
      if: ${{ inputs.archive == 'true'}}
      shell: bash
      run: |
        zip -r ${{ inputs.source }} ${{ steps.random.outputs.random }}.zip
        echo SOURCE=${{ steps.random.outputs.random }}.zip >> ${GITHUB_ENV}

    - name: skip-archive source
      shell: bash
      if: ${{ inputs.archive == 'false' }}
      run: echo SOURCE=${{ inputs.source }} >> ${GITHUB_ENV}

    - name: Upload to S3
      shell: bash
      run: |
        aws s3 cp ${{ env.SOURCE }} s3://${{ inputs.bucket }}/${{ steps.random.outputs.random }}
